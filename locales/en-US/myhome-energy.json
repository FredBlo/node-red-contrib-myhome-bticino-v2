{
	"common":
	{
		"_version_common": "2022.11.08",
		"gateway": "Gateway",
		"riser-private": "Private riser",
		"riser-localbus-01": "Local bus 1",
		"riser-localbus-02": "Local bus 2",
		"riser-localbus-03": "Local bus 3",
		"riser-localbus-04": "Local bus 4",
		"riser-localbus-05": "Local bus 5",
		"riser-localbus-06": "Local bus 6",
		"riser-localbus-07": "Local bus 7",
		"riser-localbus-08": "Local bus 8",
		"riser-localbus-09": "Local bus 9",
		"riser-localbus-10": "Local bus 10",
		"riser-localbus-11": "Local bus 11",
		"riser-localbus-12": "Local bus 12",
		"riser-localbus-13": "Local bus 13",
		"riser-localbus-14": "Local bus 14",
		"riser-localbus-15": "Local bus 15",
		"input-label-simple": "simple mode ('payload' or 'payload.state')",
		"name": "Name",
		"topic": "Topic",
		"topic-info": "to trigger the action on this node, do not forget the incoming 'msg' MUST contain a 'msg.topic' which is either 'state/__topicName__' (when used in read-only mode) or 'cmd/__topicName__' (when used in write mode), otherwise node will skip incoming message.",
		"option-smartfilter": "SmartFilter",
		"option-smartfilter-checkbox": "Filter incoming gateway events",
		"option-smartfilter-info": "SmartFilter is enabled by default, making the node only triggering a new flow (aka output) when a state CHANGED after a MyHome BUS message was received.\nThis is made to avoid multiple flows starting for the same info/command, because MyHome sends the same message multiple times (for status request, response,...) \n\nNote: SmartFilter is never applied when node is running in read-only (status update request) mode.",
		"option-smartfilter-out-checkbox": "Filter outgoing commands sent to gateway",
		"option-skipevents": "Skip events",
		"option-skipevents-checkbox": "Skip ALL incoming gateway events",
		"option-skipevents-info": "If necessary, all MyHome status updates received from the gateway about this node can be ignored, which means only Node-RED received payloads will be processed.",
		"option-readonly": "Read-only",
		"option-readonly-checkbox": "Only ask for current load status",
		"option-readonly-info": "When enabled, the received payload (being 'ON', 'OFF', or whatever) is ignored and a status request is sent to gather current state without applying any change.",
		"secondary-output-title": "Secondary output options",
		"secondary-output-intro": "You may fine-tune the secondary output to better suit your needs when integrating with other node mechanisms (see node help for more info).",
		"secondary-output-name": "Property name",
		"secondary-output-name-placeholder": "e.g. On / state / ... / (empty)",
		"secondary-output-name-info": "Is the property name on the returned payload (i.e. payload.propertyname). When left empty, the payload is returned as a single value (i.e. not as an object)",
		"secondary-output-content": "Data type"
	},



	"mh-energy":
	{
		"config":
		{

			"topic-info": "to trigger the action on this node, do not forget the incoming 'msg' MUST contain a 'msg.topic' which is either 'state/__topicName__' or 'cmd/__topicName__', otherwise node will skip incoming message.For energy node, there is no difference between 'state' or 'cmd', both will perform the same operations.",
			"name-placeholder": "Energy meter name",
			"topic-placeholder": "e.g. solar-panels",
			"meterid": "Meter",
			"meter-type-info": "Power meters devices are Bticino F520, F523, 3522 / Legrand 03555, 03557, 03554, while Power management actuators are Bticino F522, F523 / Legrand 03558, 03559.",
			"meter-type-meter": "Power management meter",
			"meter-type-actuator": "Power management actuator",
			"meterscope": "Scope",
			"meterscope-instant": "Current power",
			"meterscope-dayuptonow": "Daily consumption (today)",
			"meterscope-day": "Daily consumption (time range)",
			"meterscope-hour": "Hourly consumption (time range)",
			"meterscope-monthuptonow": "Monthly consumption (current month)",
			"meterscope-month": "Monthly consumption (time range)",
			"meterscope-sincebegin": "Full consumption since begin",
			"enablecache": "Use cache",
			"enablecache-checkbox": "Cache fetched results",
			"enablecache-info": "By default, the node will keep all previously fetched results in memory. When the same scope is asked, cached content is used instead of firing (many) requests on the MyHome BUS. Cache is non persistent and reset on node re-deploy and node-RED restart.\n\n!! The cache is also useful (/required) for some commands (such as daily consumtpion) and / or when working with gateways which do not provide response to calls as they should... but the node can still fetch info directly on the BUS and cache it instead...\n\nNote that, regardless of this setting, cache is never used for partial results (i.e. instant power, today, current month,...) since content will keep changing from call to call.",
			"enablecache-outputlog": "debug: output cache",
			"enablecache-outputlog-ok": "Current cache content successfully sent to primary output.",
			"enablecache-outputlog-error": "Error outputting current cached content to primary output :",
			"inputlabel-any": "any payload with a valid '.Topic' \nwill trigger for node output",
			"inputlabel-daterange": "payload with a valid '.Topic' will trigger \ndata collection for date-time range \nfrom '.metered_From' to '.metered_To'",
			"secondary-output-content-pwr": ".metered_Power (number in W__h__)",
			"secondary-output-content-pwr-txt": ".metered_Power (text in kW__h__)",
			"secondary-output-content-pwr-info": ".metered_Info (array of metered details)"
		},
		"node":
		{
			"status-sincebegin": "From begin: "
		}
	}
}
